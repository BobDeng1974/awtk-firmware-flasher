import os
import sys
import platform

OS_NAME = platform.system();

env=DefaultEnvironment().Clone()

BIN_DIR=os.environ['BIN_DIR'];
LIB_DIR=os.environ['LIB_DIR'];

sources=[
  "flashers/tftp/server_lib.c",
  "flashers/tftp/work_thread.c",
  "flashers/serial/src/serial.cc",
  "flashers/streams/stream_serial.cpp",
  "flashers/ymodem/fymodem.c",
  "flashers/streams/stream_tcp.c",
  "flashers/transferers/transferer_tcp.c",
  "flashers/transferers/transferer_serial.cpp",
  "flashers/transferers/transferer_factory.c",
  "flashers/transferers/transferer_tftp_server.c",
  "flashers/common/common.c",
  "flashers/common/progress.c",
  "flashers/common/platform.c",
  "flashers/common/url.c",
] + Glob("common/*.c") + Glob("view_models/*.c");

if OS_NAME == 'Windows':
  sources+=['flashers/serial/src/impl/win.cc', 'flashers/serial/src/impl/list_ports/list_ports_win.cc']
elif OS_NAME == 'Linux':
  sources+=['flashers/serial/src/impl/unix.cc', 'flashers/serial/src/impl/list_ports/list_ports_linux.cc']
elif OS_NAME == 'Darwin':
  sources+=['flashers/serial/src/impl/unix.cc', 'flashers/serial/src/impl/list_ports/list_ports_osx.cc']

print(OS_NAME)
print(sources);

env.Library(os.path.join(LIB_DIR, 'awtk_flasher'), sources);
env.Program(os.path.join(BIN_DIR, 'awtk_flasher'), Glob('application.c'), LIBS=['awtk_flasher'] + env['LIBS']);

env.Program(os.path.join(BIN_DIR, 'tftp_client'), Glob('flashers/tftp/client.c'), LIBS=['awtk_flasher'] + env['LIBS']);

